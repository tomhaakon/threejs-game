{
  "version": 3,
  "sources": ["../../three/examples/jsm/helpers/LightProbeHelper.js"],
  "sourcesContent": ["import {\r\n\tMesh,\r\n\tShaderMaterial,\r\n\tSphereGeometry\r\n} from 'three';\r\n\r\nclass LightProbeHelper extends Mesh {\r\n\r\n\tconstructor( lightProbe, size ) {\r\n\r\n\t\tconst material = new ShaderMaterial( {\r\n\r\n\t\t\ttype: 'LightProbeHelperMaterial',\r\n\r\n\t\t\tuniforms: {\r\n\r\n\t\t\t\tsh: { value: lightProbe.sh.coefficients }, // by reference\r\n\r\n\t\t\t\tintensity: { value: lightProbe.intensity }\r\n\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: [\r\n\r\n\t\t\t\t'varying vec3 vNormal;',\r\n\r\n\t\t\t\t'void main() {',\r\n\r\n\t\t\t\t'\tvNormal = normalize( normalMatrix * normal );',\r\n\r\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t].join( '\\n' ),\r\n\r\n\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t'#define RECIPROCAL_PI 0.318309886',\r\n\r\n\t\t\t\t'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {',\r\n\r\n\t\t\t\t'\t// matrix is assumed to be orthogonal',\r\n\r\n\t\t\t\t'\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t\t'// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf',\r\n\t\t\t\t'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {',\r\n\r\n\t\t\t\t'\t// normal is assumed to have unit length',\r\n\r\n\t\t\t\t'\tfloat x = normal.x, y = normal.y, z = normal.z;',\r\n\r\n\t\t\t\t'\t// band 0',\r\n\t\t\t\t'\tvec3 result = shCoefficients[ 0 ] * 0.886227;',\r\n\r\n\t\t\t\t'\t// band 1',\r\n\t\t\t\t'\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;',\r\n\t\t\t\t'\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;',\r\n\t\t\t\t'\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;',\r\n\r\n\t\t\t\t'\t// band 2',\r\n\t\t\t\t'\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;',\r\n\t\t\t\t'\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;',\r\n\t\t\t\t'\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );',\r\n\t\t\t\t'\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;',\r\n\t\t\t\t'\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );',\r\n\r\n\t\t\t\t'\treturn result;',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t\t'uniform vec3 sh[ 9 ]; // sh coefficients',\r\n\r\n\t\t\t\t'uniform float intensity; // light probe intensity',\r\n\r\n\t\t\t\t'varying vec3 vNormal;',\r\n\r\n\t\t\t\t'void main() {',\r\n\r\n\t\t\t\t'\tvec3 normal = normalize( vNormal );',\r\n\r\n\t\t\t\t'\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );',\r\n\r\n\t\t\t\t'\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );',\r\n\r\n\t\t\t\t'\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;',\r\n\r\n\t\t\t\t'\tgl_FragColor = linearToOutputTexel( vec4( outgoingLight, 1.0 ) );',\r\n\r\n\t\t\t\t'}'\r\n\r\n\t\t\t].join( '\\n' )\r\n\r\n\t\t} );\r\n\r\n\t\tconst geometry = new SphereGeometry( 1, 32, 16 );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.lightProbe = lightProbe;\r\n\t\tthis.size = size;\r\n\t\tthis.type = 'LightProbeHelper';\r\n\r\n\t\tthis.onBeforeRender();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n\tonBeforeRender() {\r\n\r\n\t\tthis.position.copy( this.lightProbe.position );\r\n\r\n\t\tthis.scale.set( 1, 1, 1 ).multiplyScalar( this.size );\r\n\r\n\t\tthis.material.uniforms.intensity.value = this.lightProbe.intensity;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { LightProbeHelper };\r\n"],
  "mappings": ";;;;;;;;AAMA,IAAM,mBAAN,cAA+B,KAAK;AAAA,EAEnC,YAAa,YAAY,MAAO;AAE/B,UAAM,WAAW,IAAI,eAAgB;AAAA,MAEpC,MAAM;AAAA,MAEN,UAAU;AAAA,QAET,IAAI,EAAE,OAAO,WAAW,GAAG,aAAa;AAAA;AAAA,QAExC,WAAW,EAAE,OAAO,WAAW,UAAU;AAAA,MAE1C;AAAA,MAEA,cAAc;AAAA,QAEb;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,MAED,EAAE,KAAM,IAAK;AAAA,MAEb,gBAAgB;AAAA,QAEf;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,MAED,EAAE,KAAM,IAAK;AAAA,IAEd,CAAE;AAEF,UAAM,WAAW,IAAI,eAAgB,GAAG,IAAI,EAAG;AAE/C,UAAO,UAAU,QAAS;AAE1B,SAAK,aAAa;AAClB,SAAK,OAAO;AACZ,SAAK,OAAO;AAEZ,SAAK,eAAe;AAAA,EAErB;AAAA,EAEA,UAAU;AAET,SAAK,SAAS,QAAQ;AACtB,SAAK,SAAS,QAAQ;AAAA,EAEvB;AAAA,EAEA,iBAAiB;AAEhB,SAAK,SAAS,KAAM,KAAK,WAAW,QAAS;AAE7C,SAAK,MAAM,IAAK,GAAG,GAAG,CAAE,EAAE,eAAgB,KAAK,IAAK;AAEpD,SAAK,SAAS,SAAS,UAAU,QAAQ,KAAK,WAAW;AAAA,EAE1D;AAED;",
  "names": []
}
