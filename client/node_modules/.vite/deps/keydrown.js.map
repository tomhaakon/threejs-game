{
  "version": 3,
  "sources": ["../../keydrown/dist/keydrown.js"],
  "sourcesContent": ["/*! keydrown - v1.2.8 - 2020-10-01 - http://jeremyckahn.github.com/keydrown */\r\n;(function (window) {\r\n\r\nvar util = (function () {\r\n\r\n  var util = {};\r\n\r\n  /**\r\n   * @param {Object} obj The Object to iterate through.\r\n   * @param {function(*, string)} iterator The function to call for each property.\r\n   */\r\n  util.forEach = function (obj, iterator) {\r\n    var prop;\r\n    for (prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) {\r\n        iterator(obj[prop], prop);\r\n      }\r\n    }\r\n  };\r\n  var forEach = util.forEach;\r\n\r\n\r\n  /**\r\n   * Create a transposed copy of an Object.\r\n   *\r\n   * @param {Object} obj\r\n   * @return {Object}\r\n   */\r\n  util.getTranspose = function (obj) {\r\n    var transpose = {};\r\n\r\n    forEach(obj, function (val, key) {\r\n      transpose[val] = key;\r\n    });\r\n\r\n    return transpose;\r\n  };\r\n\r\n\r\n  /**\r\n   * Implementation of Array#indexOf because IE<9 doesn't support it.\r\n   *\r\n   * @param {Array} arr\r\n   * @param {*} val\r\n   * @return {number} Index of the found element or -1 if not found.\r\n   */\r\n  util.indexOf = function (arr, val) {\r\n    if (arr.indexOf) {\r\n      return arr.indexOf(val);\r\n    }\r\n\r\n    var i, len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n      if (arr[i] === val) {\r\n        return i;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  };\r\n  var indexOf = util.indexOf;\r\n\r\n\r\n  /**\r\n   * Push a value onto an array if it is not present in the array already.  Otherwise, this is a no-op.\r\n   *\r\n   * @param {Array} arr\r\n   * @param {*} val\r\n   * @return {boolean} Whether or not the value was added to the array.\r\n   */\r\n  util.pushUnique = function (arr, val) {\r\n    if (indexOf(arr, val) === -1) {\r\n      arr.push(val);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove a value from an array.  Assumes there is only one instance of the\r\n   * value present in the array.\r\n   *\r\n   * @param {Array} arr\r\n   * @param {*} val\r\n   * @return {*} The value that was removed from arr.  Returns undefined if\r\n   * nothing was removed.\r\n   */\r\n  util.removeValue = function (arr, val) {\r\n    var index = indexOf(arr, val);\r\n\r\n    if (index !== -1) {\r\n      return arr.splice(index, 1)[0];\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Cross-browser function for listening for and handling an event on the\r\n   * document element.\r\n   *\r\n   * @param {string} eventName\r\n   * @param {function} handler\r\n   */\r\n  util.documentOn = function (eventName, handler) {\r\n    if (window.addEventListener) {\r\n      window.addEventListener(eventName, handler, false);\r\n    } else if (document.attachEvent) {\r\n      document.attachEvent('on' + eventName, handler);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Shim for requestAnimationFrame.  See:\r\n   * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n   */\r\n  util.requestAnimationFrame = (function () {\r\n    return window.requestAnimationFrame  ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame    ||\r\n      function( callback ){\r\n        window.setTimeout(callback, 1000 / 60);\r\n      };\r\n  })();\r\n\r\n\r\n  /**\r\n   * An empty function.  NOOP!\r\n   */\r\n  util.noop = function () {};\r\n\r\n  return util;\r\n\r\n}());\r\n\r\n/**\r\n * Lookup table of keys to keyCodes.\r\n *\r\n * @type {Object.<number>}\r\n */\r\nvar KEY_MAP = {\r\n  'ZERO': 48,\r\n  'ONE': 49,\r\n  'TWO': 50,\r\n  'THREE': 51,\r\n  'FOUR': 52,\r\n  'FIVE': 53,\r\n  'SIX': 54,\r\n  'SEVEN': 55,\r\n  'EIGHT': 56,\r\n  'NINE': 57,\r\n  'A': 65,\r\n  'B': 66,\r\n  'C': 67,\r\n  'D': 68,\r\n  'E': 69,\r\n  'F': 70,\r\n  'G': 71,\r\n  'H': 72,\r\n  'I': 73,\r\n  'J': 74,\r\n  'K': 75,\r\n  'L': 76,\r\n  'M': 77,\r\n  'N': 78,\r\n  'O': 79,\r\n  'P': 80,\r\n  'Q': 81,\r\n  'R': 82,\r\n  'S': 83,\r\n  'T': 84,\r\n  'U': 85,\r\n  'V': 86,\r\n  'W': 87,\r\n  'X': 88,\r\n  'Y': 89,\r\n  'Z': 90,\r\n  'ENTER': 13,\r\n  'SHIFT': 16,\r\n  'ESC': 27,\r\n  'SPACE': 32,\r\n  'LEFT': 37,\r\n  'UP': 38,\r\n  'RIGHT': 39,\r\n  'DOWN': 40,\r\n  'BACKSPACE': 8,\r\n  'DELETE': 46,\r\n  'TAB': 9,\r\n  'TILDE': 192,\r\n  'CTRL': 17,\r\n};\r\n\r\n\r\n/**\r\n * The transposed version of KEY_MAP.\r\n *\r\n * @type {Object.<string>}\r\n */\r\nvar TRANSPOSED_KEY_MAP = util.getTranspose(KEY_MAP);\r\n\r\n/*!\r\n * @type Array.<string>\r\n */\r\nvar keysDown = [];\r\n\r\nvar Key = (function () {\r\n\r\n  'use strict';\r\n\r\n  /**\r\n   * Represents a key on the keyboard.  You'll never actually call this method\r\n   * directly; Key Objects for every key that Keydrown supports are created for\r\n   * you when the library is initialized (as in, when the file is loaded).  You\r\n   * will, however, use the `prototype` methods below to bind functions to key\r\n   * states.\r\n   *\r\n   * @param {number} keyCode The keyCode of the key.\r\n   * @constructor\r\n   * @class kd.Key\r\n   */\r\n  function Key (keyCode) {\r\n    this.keyCode = keyCode;\r\n    this.cachedKeypressEvent = null;\r\n  }\r\n\r\n\r\n  /*!\r\n   * The function to be invoked on every tick that the key is held down for.\r\n   *\r\n   * @type {function}\r\n   */\r\n  Key.prototype._downHandler = util.noop;\r\n\r\n\r\n  /*!\r\n   * The function to be invoked when the key is released.\r\n   *\r\n   * @type {function}\r\n   */\r\n  Key.prototype._upHandler = util.noop;\r\n\r\n\r\n  /*!\r\n   * The function to be invoked when the key is pressed.\r\n   *\r\n   * @type {function}\r\n   */\r\n  Key.prototype._pressHandler = util.noop;\r\n\r\n\r\n  /*!\r\n   * Private helper function that binds or invokes a hander for `down`, `up',\r\n   * or `press` for a `Key`.\r\n   *\r\n   * @param {Key} key\r\n   * @param {string} handlerName\r\n   * @param {function=} opt_handler If omitted, the handler is invoked.\r\n   * @param {KeyboardEvent=} opt_evt If this function is being called by a\r\n   * keyboard event handler, this is the raw KeyboardEvent Object provided from\r\n   * the browser.\r\n   */\r\n  function bindOrFire (key, handlerName, opt_handler, opt_evt) {\r\n    if (opt_handler) {\r\n      key[handlerName] = opt_handler;\r\n    } else {\r\n      key[handlerName](opt_evt);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns whether the key is currently pressed or not.\r\n   *\r\n   * @method isDown\r\n   * @return {boolean} True if the key is down, otherwise false.\r\n   */\r\n  Key.prototype.isDown = function () {\r\n    return util.indexOf(keysDown, this.keyCode) !== -1;\r\n  };\r\n\r\n\r\n  /**\r\n   * Bind a function to be called when the key is held down.\r\n   *\r\n   * @method down\r\n   * @param {function=} opt_handler The function to be called when the key is\r\n   * held down.  If omitted, this function invokes whatever handler was\r\n   * previously bound.\r\n   */\r\n  Key.prototype.down = function (opt_handler) {\r\n    bindOrFire(this, '_downHandler', opt_handler, this.cachedKeypressEvent);\r\n  };\r\n\r\n\r\n  /**\r\n   * Bind a function to be called when the key is released.\r\n   *\r\n   * @method up\r\n   * @param {function=} opt_handler The function to be called when the key is\r\n   * released.  If omitted, this function invokes whatever handler was\r\n   * previously bound.\r\n   * @param {KeyboardEvent=} opt_evt If this function is being called by the\r\n   * keyup event handler, this is the raw KeyboardEvent Object provided from\r\n   * the browser.  This should generally not be provided by client code.\r\n   */\r\n  Key.prototype.up = function (opt_handler, opt_evt) {\r\n    bindOrFire(this, '_upHandler', opt_handler, opt_evt);\r\n  };\r\n\r\n\r\n  /**\r\n   * Bind a function to be called when the key is pressed.  This handler will\r\n   * not fire again until the key is released â€” it does not repeat.\r\n   *\r\n   * @method press\r\n   * @param {function=} opt_handler The function to be called once when the key\r\n   * is pressed.  If omitted, this function invokes whatever handler was\r\n   * previously bound.\r\n   * @param {KeyboardEvent=} opt_evt If this function is being called by the\r\n   * keydown event handler, this is the raw KeyboardEvent Object provided from\r\n   * the browser.  This should generally not be provided by client code.\r\n   */\r\n  Key.prototype.press = function (opt_handler, opt_evt) {\r\n    this.cachedKeypressEvent = opt_evt;\r\n    bindOrFire(this, '_pressHandler', opt_handler, opt_evt);\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove the handler that was bound with `{{#crossLink\r\n   * \"kd.Key/down:method\"}}{{/crossLink}}`.\r\n   * @method unbindDown\r\n   */\r\n  Key.prototype.unbindDown = function () {\r\n    this._downHandler = util.noop;\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove the handler that was bound with `{{#crossLink\r\n   * \"kd.Key/up:method\"}}{{/crossLink}}`.\r\n   * @method unbindUp\r\n   */\r\n  Key.prototype.unbindUp = function () {\r\n    this._upHandler = util.noop;\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove the handler that was bound with `{{#crossLink\r\n   * \"kd.Key/press:method\"}}{{/crossLink}}`.\r\n   * @method unbindPress\r\n   */\r\n  Key.prototype.unbindPress = function () {\r\n    this._pressHandler = util.noop;\r\n  };\r\n\r\n  return Key;\r\n\r\n}());\r\n\r\nvar kd = (function (keysDown) {\r\n\r\n  'use strict';\r\n\r\n  /**\r\n   * @class kd\r\n   */\r\n  var kd = {};\r\n  kd.Key = Key;\r\n\r\n  var isRunning = false;\r\n\r\n  var now = Date.now\r\n     ? Date.now\r\n     : function () {return +new Date();};\r\n\r\n  var previousUpdateTime = now();\r\n\r\n  /**\r\n   * Evaluate which keys are held down and invoke their handler functions.\r\n   * @method tick\r\n   */\r\n  kd.tick = function () {\r\n    var i, len = keysDown.length;\r\n    for (i = 0; i < len; i++) {\r\n      var keyCode = keysDown[i];\r\n\r\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\r\n      if (keyName) {\r\n        kd[keyName].down();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * A basic run loop.  `handler` gets called approximately 60 times a second.\r\n   *\r\n   * @param {Function(number, number)} handler The callback function to call on\r\n   * every tick.  You likely want to call [kd.tick](#method_tick) in this\r\n   * function.  This callback receives the time elapsed since the previous\r\n   * execution of the callback as the first parameter, and the current time\r\n   * stamp as the second.\r\n   * @method run\r\n   */\r\n  kd.run = function (handler) {\r\n    isRunning = true;\r\n    var currentTime = now();\r\n    var timeSinceLastUpdate = currentTime - previousUpdateTime;\r\n\r\n    util.requestAnimationFrame.call(window, function () {\r\n      if (!isRunning) {\r\n        return;\r\n      }\r\n\r\n      kd.run(handler);\r\n      handler(timeSinceLastUpdate, currentTime);\r\n    });\r\n\r\n    previousUpdateTime = currentTime;\r\n  };\r\n\r\n\r\n  /**\r\n   * Cancels the loop created by [run](#method_run).\r\n   * @method stop\r\n   */\r\n  kd.stop = function () {\r\n    isRunning = false;\r\n  };\r\n\r\n\r\n  // SETUP\r\n  //\r\n\r\n\r\n  // Initialize the KEY Objects\r\n  util.forEach(KEY_MAP, function (keyCode, keyName) {\r\n    kd[keyName] = new Key(keyCode);\r\n  });\r\n\r\n  util.documentOn('keydown', function (evt) {\r\n    var keyCode = evt.keyCode;\r\n    var keyName = TRANSPOSED_KEY_MAP[keyCode];\r\n    var isNew = util.pushUnique(keysDown, keyCode);\r\n    var key = kd[keyName];\r\n\r\n    if (key) {\r\n      var cachedKeypressEvent = key.cachedKeypressEvent || {};\r\n\r\n      // If a modifier key was held down the last time that this button was\r\n      // pressed, and it is pressed again without the modifier key being\r\n      // released, it is considered a newly-pressed key.  This is to work\r\n      // around the fact that the \"keyup\" event does not fire for the modified\r\n      // key until the modifier button is also released, which poses a problem\r\n      // for repeated, modified key presses such as hitting ctrl/meta+Z for\r\n      // rapid \"undo\" actions.\r\n      if (cachedKeypressEvent.ctrlKey ||\r\n          cachedKeypressEvent.shiftKey ||\r\n          cachedKeypressEvent.metaKey) {\r\n        isNew = true;\r\n      }\r\n\r\n      if (isNew) {\r\n        key.press(null, evt);\r\n      }\r\n    }\r\n  });\r\n\r\n  util.documentOn('keyup', function (evt) {\r\n    var keyCode = util.removeValue(keysDown, evt.keyCode);\r\n\r\n    var keyName = TRANSPOSED_KEY_MAP[keyCode];\r\n    if (keyName) {\r\n      kd[keyName].up(null, evt);\r\n    }\r\n  });\r\n\r\n  // Stop firing the \"down\" handlers if the user loses focus of the browser\r\n  // window.\r\n  util.documentOn('blur', function (evt) {\r\n    // Fire the \"up\" handler for each key that is currently held down\r\n    util.forEach(keysDown, function (keyCode) {\r\n      var mappedKey = TRANSPOSED_KEY_MAP[keyCode];\r\n      if (mappedKey) {\r\n        kd[mappedKey].up();\r\n      }\r\n    });\r\n\r\n    keysDown.length = 0;\r\n  });\r\n\r\n\r\n  return kd;\r\n\r\n // The variables passed into the closure here are defined in kd.key.js.\r\n}(keysDown));\r\n\r\nif (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n  // Keydrown was loaded as a CommonJS module (by Browserify, for example).\r\n  module.exports = kd;\r\n} else if (typeof define === \"function\" && define.amd) {\r\n  // Keydrown was loaded as an AMD module.\r\n  define(function () {\r\n    return kd;\r\n  });\r\n} else {\r\n  window.kd = kd;\r\n}\r\n\r\n} (window));\r\n"],
  "mappings": "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",
  "names": ["window", "util", "Key", "keysDown", "kd"]
}
